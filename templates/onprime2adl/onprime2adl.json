{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"SqlServer1_onprimese": {
			"type": "string"
		},
		"linked_service_adl": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/onprime2adl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServeronprimese",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2023-05-02T11:09:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServeronprimese')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServeronprimese')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('SqlServer1_onprimese')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exe_3 (onprime2adl)"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "crime_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "city_block",
						"type": "nvarchar"
					},
					{
						"name": "crime_type",
						"type": "nvarchar"
					},
					{
						"name": "crime_description",
						"type": "nvarchar"
					},
					{
						"name": "crime_location",
						"type": "nvarchar"
					},
					{
						"name": "arrest",
						"type": "bit"
					},
					{
						"name": "domestic",
						"type": "bit"
					},
					{
						"name": "community_id",
						"type": "float",
						"precision": 15
					},
					{
						"name": "latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "longitude",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "chicago_crimes_2021"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('linked_service_adl')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exe_3 (onprime2adl)"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Age": {
							"type": "string"
						},
						"Sex": {
							"type": "string"
						},
						"BP": {
							"type": "string"
						},
						"Cholesterol": {
							"type": "string"
						},
						"NAK": {
							"type": "string"
						},
						"Drug": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}